#!/usr/bin/python

import logging
import yaml
import asyncio
import subprocess


def logger():
    try:
        log = logging.getLogger(__name__)
        log.setLevel(logging.DEBUG)
        file_handler = logging.FileHandler('/tmp/vasak-session.log', mode='w')
        formatter = logging.Formatter(
            '%(asctime)s : %(levelname)s : %(name)s : %(message)s')
        file_handler.setFormatter(formatter)
        log.addHandler(file_handler)
        return log
    except PermissionError:
        print("No permission to write log")
        return False


log = logger()


def load_settings():
    session_path = "/etc/vasak/session-wayland.yaml"
    try:
        with open(session_path) as f:
            return yaml.load(f, Loader=yaml.FullLoader)
    except FileNotFoundError:
        output = f"{session_path} not found"
        if log:
            log.info(output)
        else:
            print(output)


async def run(cmd, restart=False):
    proc = await asyncio.create_subprocess_shell(
        cmd,
        stdout=asyncio.subprocess.PIPE,
        stderr=asyncio.subprocess.PIPE,
    )

    stdout, stderr = await proc.communicate()
    returncode = f'{cmd} exited with code {proc.returncode}'
    if log:
        log.info(returncode)
    else:
        print(returncode)

    if stdout:
        output = f'pid: {proc.pid}\n{stdout.decode()}'
        if log:
            log.debug(output)
        else:
            print(output)
    if stderr:
        output = f'pid: {proc.pid}\n{stderr.decode()}'
        if log:
            log.debug(output)
        else:
            print(output)


def session():
    vde = load_settings().get("vde")
    wm = load_settings().get("wm")
    dex = load_settings().get("dex")
    tasks = [run(wm[0], restart=True)]
    for task in vde:
        tasks.append(run(task, restart=True))

    tasks.append(run(dex[0]))

    async def procs():
        await asyncio.gather(*tasks)

    asyncio.run(procs())


session()
